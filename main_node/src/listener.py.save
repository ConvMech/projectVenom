#!/usr/bin/env python
import rospy
import subprocess
import time
import os
from std_msgs.msg import String

dir_save_bagfile = '/home/pi/bagfile/'

def terminate_ros_node(s):
    list_cmd = subprocess.Popen("rosnode list", shell=True, stdout=subprocess.PIPE)
    list_output = list_cmd.stdout.read()
    retcode = list_cmd.wait()
    assert retcode == 0, "List command returned %d" % retcode
    for str in list_output.split("\n"):
        if (str.startswith(s)):
            os.system("rosnode kill " + str)

def callback(data):
    rospy.loginfo(rospy.get_caller_id() + "I heard %s", data.data)
    if (data.data == "record"):
        rosbag_process = subprocess.Popen('rosbag record -a -j -o {}'.format("my_rosbag_prefis"), stdin=subprocess.PIPE, shell=True, cwd=dir_save_bagfile)
        time.sleep(5)
        print(rosbag_process.pid)
        print("successfully started the node!")
    elif (data.data == "stop"):
	try:
	    subprocess.Popen(["rosnode","kill","usb_cam"])
            print("stoping usb_cam for clean exit")
	except:
            print("no usb_cam node running")
        time.sleep(10)
        proc = subprocess.Popen('ls', stdout=subprocess.PIPE)
>>> output = proc.stdout.read()
>>> printutput       
        terminate_ros_node("/record")
        try:
            os.system("roslaunch usb_cam usb_cam-test.launch")
            print("restared usb_cam")
        except:
            print("no usb_cam node running")

    
def listener():

    rospy.init_node('listener', anonymous=True)
    rospy.Subscriber("chatter", String, callback)
    rospy.spin()

if __name__ == '__main__':
    listener()

